{"remainingRequest":"/opt/client/node_modules/babel-loader/lib/index.js!/opt/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/client/src/components/admin/manageProcessors.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/client/src/components/admin/manageProcessors.vue","mtime":1582320098840},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1582320095676},{"path":"/opt/client/node_modules/babel-loader/lib/index.js","mtime":1582320095572},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1582320095676},{"path":"/opt/client/node_modules/vue-loader/lib/index.js","mtime":1582320098604}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/opt/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DBService from \"../DBService\"; //import TodoItem from './TodoItem.vue';\n\nexport default {\n  name: 'ManageProcessors',\n  components: {},\n  data: function data() {\n    return {\n      newProcessorName: \"\",\n      newProcessorMail: \"\"\n    };\n  },\n  props: {\n    msg: String\n  },\n  created: function created() {\n    //this.updateAllData()\n    this.$parent.updateAll();\n  },\n  methods: {\n    AddProcessor: function () {\n      var _AddProcessor = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var _NewProc;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _NewProc = {\n                  NewProcessorName: this.newProcessorName,\n                  NewProcessorMail: this.newProcessorMail\n                }; //alert (\"Name: \" + _NewProc.NewProcessorName)\n\n                _context.next = 3;\n                return DBService.DBAddProcessor(_NewProc).then(function () {\n                  return _this.$parent.updateAll();\n                }).then(function () {\n                  _this.newProcessorMail = \"\";\n                  _this.newProcessorName = \"\";\n                }).catch(function (error) {\n                  return alert(\"Server returned an Error:\\n\" + error.response.data);\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function AddProcessor() {\n        return _AddProcessor.apply(this, arguments);\n      }\n\n      return AddProcessor;\n    }(),\n    toggleProcessors: function () {\n      var _toggleProcessors = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(id, enabled) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return DBService.toggleEntry(\"Processors\", id, enabled).then(function () {\n                  return _this2.$parent.updateAll();\n                }).catch(function (error) {\n                  return alert(\"Server returned an Error:\\n\" + error.response.data);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function toggleProcessors(_x, _x2) {\n        return _toggleProcessors.apply(this, arguments);\n      }\n\n      return toggleProcessors;\n    }()\n  }\n};",{"version":3,"sources":["manageProcessors.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA,OAAA,SAAA,qB,CACA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,gBAAA,EAAA,EADA;AAEA,MAAA,gBAAA,EAAA;AAFA,KAAA;AAIA,GARA;AASA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GATA;AAYA,EAAA,OAZA,qBAYA;AACA;AACA,SAAA,OAAA,CAAA,SAAA;AACA,GAfA;AAgBA,EAAA,OAAA,EAAA;AAEA,IAAA,YAFA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAGA,gBAAA,QAHA,GAGA;AACA,kBAAA,gBAAA,EAAA,KAAA,gBADA;AAEA,kBAAA,gBAAA,EAAA,KAAA;AAFA,iBAHA,EAQA;;AARA;AAAA,uBASA,SAAA,CACA,cADA,CACA,QADA,EAEA,IAFA,CAEA;AAAA,yBAAA,KAAA,CAAA,OAAA,CAAA,SAAA,EAAA;AAAA,iBAFA,EAGA,IAHA,CAGA,YAAA;AACA,kBAAA,KAAA,CAAA,gBAAA,GAAA,EAAA;AACA,kBAAA,KAAA,CAAA,gBAAA,GAAA,EAAA;AACA,iBANA,EAOA,KAPA,CAOA,UAAA,KAAA;AAAA,yBAAA,KAAA,CAAA,gCAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AAAA,iBAPA,CATA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmBA,IAAA,gBAnBA;AAAA;AAAA;AAAA,gDAmBA,EAnBA,EAmBA,OAnBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAoBA,SAAA,CAAA,WAAA,CAAA,YAAA,EAAA,EAAA,EAAA,OAAA,EACA,IADA,CACA;AAAA,yBAAA,MAAA,CAAA,OAAA,CAAA,SAAA,EAAA;AAAA,iBADA,EAEA,KAFA,CAEA,UAAA,KAAA;AAAA,yBAAA,KAAA,CAAA,gCAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AAAA,iBAFA,CApBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAhBA,CAAA","sourcesContent":["<template>\r\n\r\n    <div >\r\n\r\n        <!-- <h1> {{msg}} </h1> -->\r\n        <section class=\"form\">\r\n            <input\r\n                class=\"form-control\"\r\n                v-model=\"newProcessorName\"\r\n                placeholder=\"Bearbeitende Abteilung\"/>\r\n            <input\r\n                class=\"form-control\"\r\n                v-model=\"newProcessorMail\"\r\n                placeholder=\"Notify Email\"/>\r\n            <button type=\"button\" class=\"btn btn-success\" @click='AddProcessor'>Anlegen</button>\r\n                        <hr/>\r\n            <div >\r\n                <table class=\"table  table-striped table-dark\">\r\n                    <thead class=\"thead-dark\">\r\n                        <tr>\r\n                            <th scope=\"col\">Bearbeiter</th>\r\n                            <th scope=\"col\">Mail</th>\r\n                            <th scope=\"col\">(de-)aktivieren</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        <tr v-for=\"processor in this.$parent.Processors\" v-bind:key=\"processor.id\">\r\n                            <template v-if=\"processor.enabled === 1\">\r\n                                <td>{{processor.name}}</td>\r\n                                <td>{{processor.notifyMail}}</td>\r\n                                <td align=\"right\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn-disable\"\r\n                                        @click='toggleProcessors(processor.id, processor.enabled)'>disable</button>\r\n                                </td>\r\n                            </template>\r\n                            <template v-if=\"processor.enabled === 0\">\r\n                                <td class=\"disabledColumn\">{{processor.name}}</td>\r\n                                <td class=\"disabledColumn\">{{processor.notifyMail}}</td>\r\n                                <td class=\"disabledColumn\" align=\"right\">\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        class=\"btn-enable\"\r\n                                        @click='toggleProcessors(processor.id, processor.enabled)'>Enable</button>\r\n                                </td>\r\n                            </template>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </section>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DBService from '../DBService';\r\n    //import TodoItem from './TodoItem.vue';\r\n    export default {\r\n        name: 'ManageProcessors',\r\n        components: {},\r\n        data() {\r\n            return {\r\n                newProcessorName: \"\",\r\n                newProcessorMail: \"\"\r\n                }\r\n        },\r\n        props: {\r\n            msg: String\r\n        },\r\n         created() {\r\n          //this.updateAllData()\r\n         this.$parent.updateAll();\r\n        },\r\n        methods: {\r\n  \r\n            async AddProcessor () {\r\n                const _NewProc = {\r\n                    NewProcessorName: this.newProcessorName,\r\n                    NewProcessorMail: this.newProcessorMail\r\n                };\r\n\r\n                //alert (\"Name: \" + _NewProc.NewProcessorName)\r\n                await DBService\r\n                .DBAddProcessor(_NewProc)\r\n                .then(() => this.$parent.updateAll())\r\n                .then(() => {\r\n                    this.newProcessorMail = \"\"\r\n                    this.newProcessorName = \"\"\r\n                })\r\n                  .catch((error) => alert((\"Server returned an Error:\\n\" + error.response.data)));\r\n            },\r\n\r\n            async toggleProcessors(id, enabled) {\r\n                await DBService.toggleEntry(\"Processors\", id, enabled)\r\n                .then(() =>  this.$parent.updateAll())            \r\n                .catch((error) => alert((\"Server returned an Error:\\n\" + error.response.data)));\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped=\"scoped\">\r\n    div.container {\r\n        max-width: 90%;\r\n\r\n    }\r\n\r\n    p.error {\r\n        border: 1px solid #ff5b5f;\r\n        background-color: #ffc5c1;\r\n        padding: 10px;\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    div.entryRow {\r\n        position: relative;\r\n        border: 1px solid #5bd658;\r\n        background-color: #bcffb8;\r\n        padding: 10px 10px 1px;\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    div.created-at {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        padding: 5px 15px;\r\n        background-color: darkgreen;\r\n        color: white;\r\n        font-size: 13px;\r\n    }\r\n\r\n    p.text {\r\n        font-size: 22px;\r\n        font-weight: 700;\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    p.smalltext {\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        margin-bottom: 0;\r\n    }\r\n    /* table {\r\n                                      width: 100%;\r\n                                      text-align: left;\r\n                                      border: 1px solid black;\r\n                                      border-collapse: collapse;\r\n                                           \r\n                                    }\r\n                                    th {\r\n                                      padding: 5px;\r\n                                      font-weight: 700;\r\n                                      border: 1px solid black;\r\n                                      vertical-align: middle;\r\n                                    } */\r\n    td {\r\n        padding: 4px;\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        margin-bottom: 0;\r\n        border: 1px solid black;\r\n        vertical-align: middle;\r\n        align: left;\r\n    }\r\n    .btn-disable {\r\n        background-color: rgb(53, 53, 53);\r\n        color: rgb(236, 48, 48);\r\n        border: 2px solid rgb(179, 7, 7);\r\n        /* Green */\r\n    }\r\n    .btn-enable {\r\n        background-color: rgb(53, 53, 53);\r\n        color: rgb(124, 223, 148);\r\n        border: 2px solid rgb(0, 145, 43);\r\n        /* Green */\r\n    }\r\n</style>"],"sourceRoot":"src/components/admin"}]}