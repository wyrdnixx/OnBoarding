{"remainingRequest":"/opt/client/node_modules/babel-loader/lib/index.js!/opt/client/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/opt/client/src/components/DBService.js","dependencies":[{"path":"/opt/client/src/components/DBService.js","mtime":1582320098836},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1582320095676},{"path":"/opt/client/node_modules/babel-loader/lib/index.js","mtime":1582320095572},{"path":"/opt/client/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1582320095152}],"contextDependencies":[],"result":["import _classCallCheck from \"/opt/client/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/client/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\nimport axios from 'axios'; //import { resolve } from \"url\";\n//const url = `http://docker:5000/api/posts/`;\n\nvar apiURL = window.location.protocol + \"//\" + window.location.hostname + \":5000/api\"; // --> /api/getdb/:entrys\n\nvar DBService =\n/*#__PURE__*/\nfunction () {\n  function DBService() {\n    _classCallCheck(this, DBService);\n  }\n\n  _createClass(DBService, null, [{\n    key: \"toggleEntry\",\n    value: function toggleEntry(table, id, enabled) {\n      var callUrl = apiURL + \"/toggle\";\n      return axios.post(\"\".concat(callUrl), {\n        table: table,\n        id: id,\n        enabled: enabled\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  }, {\n    key: \"DBGetCompanys\",\n    value: function DBGetCompanys() {\n      var callUrl = apiURL + \"/Companys\";\n      return axios.get(callUrl).then(function (response) {\n        console.log(response.data);\n        return response.data.Firmen;\n      });\n    }\n  }, {\n    key: \"DBAddCompany\",\n    value: function DBAddCompany(data) {\n      var callUrl = apiURL + \"/Companys\";\n      return axios.post(callUrl, {\n        name: data\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  }, {\n    key: \"DBGetDepartments\",\n    value: function DBGetDepartments() {\n      var callUrl = apiURL + \"/Departments\";\n      return axios.get(callUrl).then(function (response) {\n        console.log(response.data);\n        return response.data.Department;\n      });\n    }\n  }, {\n    key: \"DBAddDepartment\",\n    value: function DBAddDepartment(data) {\n      var callUrl = apiURL + \"/Departments\";\n      return axios.post(callUrl, {\n        NewDepartment: data\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  }, {\n    key: \"DBAddProcessor\",\n    value: function DBAddProcessor(data) {\n      var callUrl = apiURL + \"/Processors\";\n      return axios.post(callUrl, {\n        NewProcessor: data\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  }, {\n    key: \"DBGetProcessors\",\n    value: function DBGetProcessors() {\n      var callUrl = apiURL + \"/Processors\";\n      return axios.get(callUrl).then(function (response) {\n        console.log(response.data);\n        return response.data.Processor;\n      });\n    }\n  }, {\n    key: \"DBAddItem\",\n    value: function DBAddItem(data) {\n      var callUrl = apiURL + \"/Items\";\n      return axios.post(callUrl, {\n        NewItem: data\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  }, {\n    key: \"DBGetItems\",\n    value: function DBGetItems() {\n      console.log(\"DBGetItems\");\n      var callUrl = apiURL + \"/Items\";\n      return axios.get(callUrl).then(function (response) {\n        console.log(response.data);\n        return response.data.Item;\n      });\n    } ////////////////  -> OLD nodejs Server\n\n  }, {\n    key: \"DBget\",\n    value: function DBget(entrys, range) {//     return new Promise(async (resolve, reject) => {\n      //    // return new Promise( (resolve, reject) => {\n      //         try {\n      //             ///////////////-------------->>>>>>>>>>>>>>>> apiCompanyUrl falsch \n      //             const res = await axios.get(apiCompanyUrl + entrys +\"/\" + range);\n      //             //const res =  axios.get(apiurl + entrys +\"/\" + range);\n      //             const data = res.data;\n      //             resolve(\n      //                 data.map(dataGrid => ({\n      //                     ...dataGrid\n      //                 }))\n      //             );\n      //         }catch(err) {\n      //             reject(err);\n      //         }\n      //     })\n    }\n  }, {\n    key: \"DBgetPersonal\",\n    value: function DBgetPersonal() {}\n  }, {\n    key: \"AddPersonal\",\n    value: function AddPersonal(perComp, perNr, perAbt, perSex, perTitle, perNachname, perVorname, perGebDat, perEintritt, perAustritt, perDienstart, perBeruf) {\n      var url = window.location.protocol + \"//\" + window.location.hostname + \":8081/api/addPersonal\";\n      return axios.post(url, {\n        perComp: perComp,\n        perNr: perNr,\n        perAbt: perAbt,\n        perSex: perSex,\n        perTitle: perTitle,\n        perNachname: perNachname,\n        perVorname: perVorname,\n        perGebDat: perGebDat,\n        perEintritt: perEintritt,\n        perAustritt: perAustritt,\n        perDienstart: perDienstart,\n        perBeruf: perBeruf\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    } /// OLD -> NodeJS Server\n    // static AddCompany(data){\n    //     const url = window.location.protocol + \"//\"+ window.location.hostname +\":8081/api/addCompany\"        \n    //     return axios.post(url, {\n    //             data\n    //           }, {\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             }\n    //           });\n    // }\n    // static AddNewDep(data){\n    //     const url = window.location.protocol + \"//\"+ window.location.hostname +\":8081/api/AddNewDep\"        \n    //     return axios.post(url, {\n    //             data\n    //           }, {\n    //             headers: {\n    //                 'Content-Type': 'application/json',\n    //             }\n    //           });\n    // }\n\n  }, {\n    key: \"AddItem\",\n    value: function AddItem(itemText, itemDepartment, itemProcessor, itemType) {\n      var url = window.location.protocol + \"//\" + window.location.hostname + \":8081\" + \"/api/AddItem\";\n      return axios.post(url, {\n        itemText: itemText,\n        itemDepartment: itemDepartment,\n        itemProcessor: itemProcessor,\n        itemType: itemType\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  }]);\n\n  return DBService;\n}();\n\nexport default DBService;",{"version":3,"sources":["/opt/client/src/components/DBService.js"],"names":["axios","apiURL","window","location","protocol","hostname","DBService","table","id","enabled","callUrl","post","headers","get","then","response","console","log","data","Firmen","name","Department","NewDepartment","NewProcessor","Processor","NewItem","Item","entrys","range","perComp","perNr","perAbt","perSex","perTitle","perNachname","perVorname","perGebDat","perEintritt","perAustritt","perDienstart","perBeruf","url","itemText","itemDepartment","itemProcessor","itemType"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n//import { resolve } from \"url\";\r\n\r\n\r\n\r\n//const url = `http://docker:5000/api/posts/`;\r\nconst apiURL = window.location.protocol + \"//\"+ window.location.hostname +\":5000/api\"\r\n\r\n// --> /api/getdb/:entrys\r\n\r\nclass DBService {\r\n\r\n    static toggleEntry(table,id,enabled){        \r\n\r\n        const callUrl = apiURL + \"/toggle\"\r\n        return axios.post(`${callUrl}`,{            \r\n            table,\r\n            id,\r\n            enabled\r\n        },{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n        });          \r\n    }\r\n\r\n    \r\n    static DBGetCompanys() {        \r\n          const callUrl = apiURL + \"/Companys\"\r\n          return axios .get(callUrl) \r\n              .then((response) =>  {\r\n                  console.log(response.data)\r\n                  return response.data.Firmen\r\n              })\r\n   \r\n    }\r\n    \r\n    static DBAddCompany(data){\r\n        const callUrl = apiURL + \"/Companys\"\r\n        return axios.post(callUrl, {\r\n                name: data\r\n              }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n              });\r\n    }\r\n\r\n    static DBGetDepartments() {        \r\n        const callUrl = apiURL + \"/Departments\"\r\n        return axios .get(callUrl) \r\n            .then((response) =>  {\r\n                console.log(response.data)\r\n                return response.data.Department\r\n            })\r\n \r\n  }\r\n  \r\n  static DBAddDepartment(data){\r\n      const callUrl = apiURL + \"/Departments\"\r\n      return axios.post(callUrl, {\r\n        NewDepartment: data\r\n            }, {\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n              }\r\n            });\r\n  }\r\n\r\n  static DBAddProcessor(data){\r\n    const callUrl = apiURL + \"/Processors\"\r\n    return axios.post(callUrl, {\r\n        NewProcessor: data\r\n          }, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n          });\r\n}\r\n \r\n\r\nstatic DBGetProcessors() {        \r\n    const callUrl = apiURL + \"/Processors\"\r\n    return axios .get(callUrl) \r\n        .then((response) =>  {\r\n            console.log(response.data)\r\n            return response.data.Processor\r\n        })\r\n\r\n}\r\n\r\nstatic DBAddItem(data){\r\n    const callUrl = apiURL + \"/Items\"\r\n    return axios.post(callUrl, {\r\n        NewItem: data\r\n          }, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n          });\r\n}\r\n\r\nstatic DBGetItems() {  \r\n    console.log(\"DBGetItems\")      \r\n    const callUrl = apiURL + \"/Items\"\r\n    return axios .get(callUrl) \r\n        .then((response) =>  {\r\n            console.log(response.data)\r\n            return response.data.Item\r\n        })\r\n\r\n}\r\n\r\n////////////////  -> OLD nodejs Server\r\n\r\n    static DBget(entrys,range) {\r\n    //     return new Promise(async (resolve, reject) => {\r\n    //    // return new Promise( (resolve, reject) => {\r\n    //         try {\r\n    //             ///////////////-------------->>>>>>>>>>>>>>>> apiCompanyUrl falsch \r\n    //             const res = await axios.get(apiCompanyUrl + entrys +\"/\" + range);\r\n    //             //const res =  axios.get(apiurl + entrys +\"/\" + range);\r\n    //             const data = res.data;\r\n    //             resolve(\r\n    //                 data.map(dataGrid => ({\r\n    //                     ...dataGrid\r\n    //                 }))\r\n    //             );\r\n    //         }catch(err) {\r\n    //             reject(err);\r\n    //         }\r\n    //     })\r\n    }\r\n\r\n static DBgetPersonal() {\r\n\r\n }\r\n\r\n \r\n    static AddPersonal(perComp,perNr,perAbt,perSex,perTitle,perNachname,perVorname,perGebDat,perEintritt,perAustritt,perDienstart,perBeruf){\r\n        const url = window.location.protocol + \"//\"+ window.location.hostname +\":8081/api/addPersonal\"        \r\n        return axios.post(url, {\r\n            perComp,\r\n            perNr,\r\n            perAbt,\r\n            perSex,\r\n            perTitle,\r\n            perNachname,\r\n            perVorname,\r\n            perGebDat,\r\n            perEintritt,\r\n            perAustritt,\r\n            perDienstart,\r\n            perBeruf\r\n              }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                }\r\n              });\r\n    }\r\n\r\n    /// OLD -> NodeJS Server\r\n    // static AddCompany(data){\r\n    //     const url = window.location.protocol + \"//\"+ window.location.hostname +\":8081/api/addCompany\"        \r\n    //     return axios.post(url, {\r\n    //             data\r\n    //           }, {\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //             }\r\n    //           });\r\n    // }\r\n \r\n    \r\n    // static AddNewDep(data){\r\n    //     const url = window.location.protocol + \"//\"+ window.location.hostname +\":8081/api/AddNewDep\"        \r\n    //     return axios.post(url, {\r\n    //             data\r\n    //           }, {\r\n    //             headers: {\r\n    //                 'Content-Type': 'application/json',\r\n    //             }\r\n    //           });\r\n    // }\r\n\r\n \r\n    \r\n    static AddItem(itemText, itemDepartment, itemProcessor, itemType) {\r\n    const url = window.location.protocol + \"//\" + window.location.hostname + \":8081\" +\r\n            \"/api/AddItem\"\r\n\r\n    return axios.post(url, {\r\n        itemText,\r\n        itemDepartment,\r\n        itemProcessor,\r\n        itemType\r\n    }, {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n    }\r\n\r\n}\r\n\r\nexport default DBService;\r\n\r\n"]}]}