{"remainingRequest":"/opt/client/node_modules/babel-loader/lib/index.js!/opt/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/client/src/components/admin/manageMain.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/client/src/components/admin/manageMain.vue","mtime":1581368475974},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1581161752000},{"path":"/opt/client/node_modules/babel-loader/lib/index.js","mtime":1581161736000},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1581161752000},{"path":"/opt/client/node_modules/vue-loader/lib/index.js","mtime":1581161753000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/opt/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ManageCompany from \"./manageCompany.vue\";\nimport ManageDepartments from \"./manageDepartments.vue\";\nimport ManageItems from \"./manageItems.vue\";\nimport ManageProcessors from \"./manageProcessors.vue\";\nimport DBService from \"../DBService\";\nimport axios from 'axios';\nexport default {\n  name: 'index',\n  components: {\n    ManageCompany: ManageCompany,\n    ManageDepartments: ManageDepartments,\n    ManageItems: ManageItems,\n    ManageProcessors: ManageProcessors\n  },\n  data: function data() {\n    return {\n      toggleViewCompany: false,\n      toggleViewDepartments: false,\n      toggleViewProcessors: false,\n      toggleViewItems: true,\n      hover: false,\n      Firmen: [],\n      Abteilungen: [],\n      Processors: [],\n      Items: [],\n      NavLblIsActive: false\n    };\n  },\n  methods: {\n    MtoggleViewCompany: function () {\n      var _MtoggleViewCompany = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.updateAll();\n                this.toggleViewCompany = true;\n                this.toggleViewDepartments = false;\n                this.toggleViewItems = false;\n                this.toggleViewProcessors = false;\n                this.toggleButtons(\"btnComp\");\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function MtoggleViewCompany() {\n        return _MtoggleViewCompany.apply(this, arguments);\n      }\n\n      return MtoggleViewCompany;\n    }(),\n    MtoggleViewDepartments: function () {\n      var _MtoggleViewDepartments = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.updateAll();\n                this.toggleViewCompany = false;\n                this.toggleViewDepartments = true;\n                this.toggleViewItems = false;\n                this.toggleViewProcessors = false;\n                this.toggleButtons(\"btnDep\");\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function MtoggleViewDepartments() {\n        return _MtoggleViewDepartments.apply(this, arguments);\n      }\n\n      return MtoggleViewDepartments;\n    }(),\n    MtoggleViewProcessors: function () {\n      var _MtoggleViewProcessors = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.toggleViewCompany = false;\n                this.toggleViewDepartments = false;\n                this.toggleViewItems = false;\n                this.toggleViewProcessors = true;\n                this.toggleButtons(\"btnProc\");\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function MtoggleViewProcessors() {\n        return _MtoggleViewProcessors.apply(this, arguments);\n      }\n\n      return MtoggleViewProcessors;\n    }(),\n    MtoggleViewItems: function () {\n      var _MtoggleViewItems = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.toggleViewCompany = false;\n                this.toggleViewDepartments = false;\n                this.toggleViewItems = true;\n                this.toggleViewProcessors = false;\n                this.toggleButtons(\"btnItem\");\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function MtoggleViewItems() {\n        return _MtoggleViewItems.apply(this, arguments);\n      }\n\n      return MtoggleViewItems;\n    }(),\n    toggleButtons: function () {\n      var _toggleButtons = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(_button) {\n        var btnComp, btnDep, btnProc, btnItem, current;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                btnComp = document.getElementById(\"btnComp\");\n                btnDep = document.getElementById(\"btnDep\");\n                btnProc = document.getElementById(\"btnProc\");\n                btnItem = document.getElementById(\"btnItem\");\n                btnComp.classList.remove(\"active\");\n                btnDep.classList.remove(\"active\");\n                btnProc.classList.remove(\"active\");\n                btnItem.classList.remove(\"active\");\n                current = document.getElementById(_button);\n                current.classList.add(\"active\");\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function toggleButtons(_x) {\n        return _toggleButtons.apply(this, arguments);\n      }\n\n      return toggleButtons;\n    }(),\n    updateAll: function () {\n      var _updateAll = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var _this = this;\n\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                console.log(\"updateAll() aus Main\");\n                _context6.next = 3;\n                return DBService.DBGetCompanys().then(function (_firmen) {\n                  _this.Firmen = _firmen;\n                });\n\n              case 3:\n                _context6.next = 5;\n                return DBService.DBGetDepartments().then(function (_departmens) {\n                  _this.Abteilungen = _departmens;\n                });\n\n              case 5:\n                _context6.next = 7;\n                return DBService.DBGetProcessors().then(function (_processors) {\n                  _this.Processors = _processors;\n                });\n\n              case 7:\n                _context6.next = 9;\n                return DBService.DBGetItems().then(function (_items) {\n                  _this.Items = _items;\n                });\n\n              case 9:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      function updateAll() {\n        return _updateAll.apply(this, arguments);\n      }\n\n      return updateAll;\n    }()\n  }\n};",{"version":3,"sources":["manageMain.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"global page\" style=\"background-color:rgb(40, 40, 40)\">\n        <!-- <img alt=\"Vue logo\" src=\"./assets/logo.png\"> -->\n\n\n        <!-- Test neuer Navbar -->\n        \n    <!-- <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\"> -->\n\n        <div class=\"nav nav-tabs\" >\n        <label class=\"btn btn-secondary\" id=\"btnComp\" v-bind:class=\"{active: NavLblIsActive}\" @click='MtoggleViewCompany'>\n            Firmen bearbeiten\n        </label>\n        <label class=\"btn btn-secondary\"  id=\"btnDep\" @click='MtoggleViewDepartments'>\n            Abteilungen bearbeiten\n        </label>\n        <label class=\"btn btn-secondary\"  id=\"btnProc\" @click='MtoggleViewProcessors'>\n            Bearbeiter bearbeiten\n        </label>\n        <label class=\"btn btn-secondary\" id=\"btnItem\" @click='MtoggleViewItems'>\n            Items bearbeiten\n        </label>\n    </div>\n        \n\n        <div v-show=\"toggleViewCompany\">\n            <ManageCompany msg=\"Firma bearbeiten\"/>\n        </div>\n\n        <div v-show=\"toggleViewDepartments\">\n            <ManageDepartments msg=\"Abteilungen bearbeiten\"/>\n        </div>\n        <div v-show=\"toggleViewProcessors\">\n            <ManageProcessors msg=\"Bearbeiter bearbeiten\"/>\n        </div>\n        <div v-show=\"toggleViewItems\">\n            <ManageItems msg=\"Items bearbeiten\"/>\n        </div>\n    </div>\n</template>\n\n<script>\n    import ManageCompany from './manageCompany.vue'\n    import ManageDepartments from './manageDepartments.vue'\n    import ManageItems from './manageItems.vue'\n    import ManageProcessors from './manageProcessors.vue'\n\n    import DBService from '../DBService';\n\nimport axios from 'axios';\n\n    export default {\n        name: 'index',\n        components: {\n            ManageCompany,\n            ManageDepartments,\n            ManageItems,\n            ManageProcessors\n        },\n        data() {\n            return {\n                toggleViewCompany: false,\n                toggleViewDepartments: false,\n                toggleViewProcessors: false,\n                toggleViewItems: true,\n                hover: false,\n\n                Firmen: [],\n                Abteilungen: [],\n                Processors: [],\n                Items: [],\n\n                NavLblIsActive: false,\n            }\n        },\n        methods: {\n            async MtoggleViewCompany() {                \n                       this.updateAll()\n                this.toggleViewCompany = true;\n                this.toggleViewDepartments = false;\n                this.toggleViewItems = false;\n                this.toggleViewProcessors = false;\n                this.toggleButtons(\"btnComp\");\n            },\n            async MtoggleViewDepartments() {\n                this.updateAll()\n                this.toggleViewCompany = false;\n                this.toggleViewDepartments = true;\n                this.toggleViewItems = false;\n                this.toggleViewProcessors = false;\n                this.toggleButtons(\"btnDep\");\n            },\n            async MtoggleViewProcessors() {\n                this.toggleViewCompany = false;\n                this.toggleViewDepartments = false;\n                this.toggleViewItems = false;\n                this.toggleViewProcessors = true;\n                this.toggleButtons(\"btnProc\");\n            },\n            async MtoggleViewItems() {\n                this.toggleViewCompany = false;\n                this.toggleViewDepartments = false;\n                this.toggleViewItems = true;\n                this.toggleViewProcessors = false;                \n                this.toggleButtons(\"btnItem\");\n            },\n\n            async toggleButtons(_button){\n                var btnComp = document.getElementById(\"btnComp\");\n                var btnDep = document.getElementById(\"btnDep\");\n                var btnProc = document.getElementById(\"btnProc\");                \n                var btnItem = document.getElementById(\"btnItem\");\n                \n                btnComp.classList.remove(\"active\");\n                btnDep.classList.remove(\"active\");\n                btnProc.classList.remove(\"active\");\n                btnItem.classList.remove(\"active\");\n\n                var current = document.getElementById(_button);\n                current.classList.add(\"active\");\n                \n            },\n\n            async updateAll() {\n                console.log(\"updateAll() aus Main\")\n                await DBService\n                    .DBGetCompanys()\n                    .then((_firmen) => {\n                        this.Firmen = _firmen\n                    });\n                \n                await DBService\n                    .DBGetDepartments()\n                    .then((_departmens) => {\n                        this.Abteilungen = _departmens\n                    });\n\n                await DBService\n                    .DBGetProcessors()\n                    .then((_processors) => {\n                        this.Processors = _processors\n                    });\n                await DBService\n                    .DBGetItems()\n                    .then((_items) => {\n                        this.Items = _items\n                    });\n\n\n                // const apiurlnew = window.location.protocol + \"//\"+ window.location.hostname +\":5000/api/DBGetCompanys\"\n                // axios .get(apiurlnew) \n                //     .then((response) =>  {\n                //         console.log(response.data)\n                //         this.Firmen = response.data.Firmen\n                //     })  \n\n                // await DBService\n                //     .DBgetCompanys()\n                //     .then((_firmen) => {\n                //         this.Firmen = _firmen\n                //     });\n\n                ///////////////////////////////////\n\n                // await DBService\n                //     .DBget(\"Abteilungen\", \"all\")\n                //     .then((_abteilungen) => {\n                //         this.Abteilungen = _abteilungen\n                //     });\n\n                // await DBService\n                //     .DBget(\"Processors\", \"all\")\n                //     .then((_processors) => {\n                //         this.Processors = _processors\n                //     });\n                // await DBService\n                //     .DBget(\"Items\", \"all\")\n                //     .then((_items) => {\n                //         this.Items = _items\n\n                //     });\n\n                \n            }\n        }\n    }\n</script>\n\n<style>\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: left;\n        color: #3793ee;        \n        margin-top: 1%;        \n        background-color: rgb(99, 145, 247);\n    }\n\n    div {\n        margin-top: 1%;\n    }\n    td.disabledColumn {\n        color: #2e2e2e;\n        background-color: #696868;\n    }\n    div.hoverable:hover {\n        color: #12406e;\n        \n    }\n    \n    .input {\n        background-color: rgb(116, 156, 243);\n    }\n</style>"],"sourceRoot":"src/components/admin"}]}