{"remainingRequest":"/opt/client/node_modules/babel-loader/lib/index.js!/opt/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/client/src/components/admin/manageDepartments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/client/src/components/admin/manageDepartments.vue","mtime":1582320098836},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1582320095676},{"path":"/opt/client/node_modules/babel-loader/lib/index.js","mtime":1582320095572},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1582320095676},{"path":"/opt/client/node_modules/vue-loader/lib/index.js","mtime":1582320098604}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/opt/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DBService from \"../DBService\"; //import TodoItem from './TodoItem.vue';\n//import manageIndex from './manageIndex.vue'\n\nexport default {\n  name: 'ManageDepartments',\n  //extends: manageIndex,\n  components: {},\n  data: function data() {\n    return {\n      // Firmen: [],\n      // Abteilungen: [],\n      NewDepName: '',\n      NewDepCompany: '',\n      NewDepMail: '',\n      selected: \"\"\n    };\n  },\n  props: {\n    msg: String\n  },\n  created: function created() {// this.$parent.updateAll()        \n  },\n  methods: {\n    AddDepartment: function () {\n      var _AddDepartment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var _NewDep;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // wenn keine Abteilung ausgewählt wurde - nimm default ALL\n                if (!this.selected) this.selected = 0;\n                _NewDep = {\n                  newDepName: this.NewDepName,\n                  newDepCompany: this.selected,\n                  newDepMail: this.NewDepMail\n                };\n                _context.next = 4;\n                return DBService.DBAddDepartment(_NewDep).then(function () {\n                  return _this.$parent.updateAll();\n                }).then(function () {\n                  _this.newDepName = \"\";\n                  _this.newDepCompany = \"\";\n                  _this.newDepMail = \"\";\n                  _this.selected = \"\";\n                }).catch(function (error) {\n                  return alert(\"Server returned an Error:\\n\" + error.response.data);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function AddDepartment() {\n        return _AddDepartment.apply(this, arguments);\n      }\n\n      return AddDepartment;\n    }(),\n    toggleDepartment: function () {\n      var _toggleDepartment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(id, enabled) {\n        var _this2 = this;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return DBService.toggleEntry(\"Abteilungen\", id, enabled).then(function () {\n                  return _this2.$parent.updateAll();\n                }).catch(function (error) {\n                  return alert(\"Server returned an Error:\\n\" + error.response.data);\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function toggleDepartment(_x, _x2) {\n        return _toggleDepartment.apply(this, arguments);\n      }\n\n      return toggleDepartment;\n    }()\n  }\n};",{"version":3,"sources":["manageDepartments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA,OAAA,SAAA,qB,CACA;AACA;;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA;AACA,EAAA,UAAA,EAAA,EAHA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA;AACA;AACA,MAAA,UAAA,EAAA,EAHA;AAIA,MAAA,aAAA,EAAA,EAJA;AAKA,MAAA,UAAA,EAAA,EALA;AAMA,MAAA,QAAA,EAAA;AANA,KAAA;AAQA,GAbA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,GAAA,EAAA;AADA,GAdA;AAiBA,EAAA,OAjBA,qBAiBA,CACA;AACA,GAnBA;AAoBA,EAAA,OAAA,EAAA;AAEA,IAAA,aAFA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAIA;AACA,oBAAA,CAAA,KAAA,QAAA,EACA,KAAA,QAAA,GAAA,CAAA;AACA,gBAAA,OAPA,GAOA;AACA,kBAAA,UAAA,EAAA,KAAA,UADA;AAEA,kBAAA,aAAA,EAAA,KAAA,QAFA;AAGA,kBAAA,UAAA,EAAA,KAAA;AAHA,iBAPA;AAAA;AAAA,uBAaA,SAAA,CACA,eADA,CACA,OADA,EAEA,IAFA,CAEA;AAAA,yBAAA,KAAA,CAAA,OAAA,CAAA,SAAA,EAAA;AAAA,iBAFA,EAGA,IAHA,CAGA,YAAA;AACA,kBAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,KAAA,CAAA,aAAA,GAAA,EAAA;AACA,kBAAA,KAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,KAAA,CAAA,QAAA,GAAA,EAAA;AAEA,iBATA,EAUA,KAVA,CAUA,UAAA,KAAA;AAAA,yBAAA,KAAA,CAAA,gCAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AAAA,iBAVA,CAbA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BA,IAAA,gBA1BA;AAAA;AAAA;AAAA,gDA0BA,EA1BA,EA0BA,OA1BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA2BA,SAAA,CAAA,WAAA,CAAA,aAAA,EAAA,EAAA,EAAA,OAAA,EACA,IADA,CACA;AAAA,yBAAA,MAAA,CAAA,OAAA,CAAA,SAAA,EAAA;AAAA,iBADA,EAEA,KAFA,CAEA,UAAA,KAAA;AAAA,yBAAA,KAAA,CAAA,gCAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AAAA,iBAFA,CA3BA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AApBA,CAAA","sourcesContent":["<template>\r\n\r\n    <div >\r\n\r\n        <!-- <h1> {{msg}} </h1> -->\r\n\r\n        <section class=\"form\">\r\n            <input class=\"form-control\" v-model=\"NewDepName\" placeholder=\"Abteilung\"/>\r\n            <input class=\"form-control\" v-model=\"NewDepMail\" placeholder=\"Mail\"/>\r\n            Firma, der die Abteilung zugehörig ist:\r\n            <select\r\n                name=\"NewDepFirma\"\r\n                v-model=\"selected\"                \r\n                class=\"btn btn-secondary dropdown-toggle\">\r\n                <!-- <option :value=\"comp.id\">{{comp.id}} </option> -->\r\n                <option v-for=\"comp in this.$parent.Firmen\" v-bind:key=\"comp.id\" :value=\"comp.id\">{{comp.name}}\r\n                </option>\r\n            </select>\r\n\r\n            <!-- <select v-model=\"selected\" id=\"deptList\" class=\"btn btn-secondary\r\n            dropdown-toggle\"> <option v-for=\"comp in Firmen\" v-bind:value=\"comp.name\">\r\n            {{comp.name}} </option> </select> -->\r\n\r\n            <button id=\"adfds\" type=\"button\" class=\"btn btn-success\" @click='AddDepartment'>Abteilung anlegen</button>\r\n\r\n                        <hr/>\r\n                        \r\n            <table class=\"table  table-striped table-dark\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Abteilung</th>\r\n                        <th scope=\"col\">Firma</th>\r\n                        <th scope=\"col\">Mail</th>\r\n                        <th scope=\"col\">(de-)aktivieren</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    <tr v-for=\"dep in this.$parent.Abteilungen\" v-bind:key=\"dep.id\">\r\n                        <template v-if=\"dep.enabled === 1\">\r\n                            <td >{{dep.name}}</td>\r\n                            <td>{{dep.firma}}</td>\r\n                            <td>{{dep.notifyMail}}</td>\r\n                            <td align=\"right\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn-disable\"\r\n                                    @click='toggleDepartment(dep.id, dep.enabled)'>disable</button>\r\n                            </td>\r\n                        </template>\r\n                        <template v-if=\"dep.enabled === 0\">\r\n                            <td class=\"disabledColumn\">{{dep.name}}</td>\r\n                            <td class=\"disabledColumn\">{{dep.firma}}</td>\r\n                            <td class=\"disabledColumn\">{{dep.notifyMail}}</td>\r\n                            <td class=\"disabledColumn\" align=\"right\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn-enable\"\r\n                                    @click='toggleDepartment(dep.id, dep.enabled)'>Enable</button>\r\n                            </td>\r\n                        </template>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import DBService from '../DBService';\r\n    //import TodoItem from './TodoItem.vue';\r\n    //import manageIndex from './manageIndex.vue'\r\n\r\n    export default {\r\n        name: 'ManageDepartments',\r\n        //extends: manageIndex,\r\n        components: {},\r\n        data() {\r\n            return {\r\n                // Firmen: [],\r\n                // Abteilungen: [],\r\n                NewDepName: '',\r\n                NewDepCompany: '',\r\n                NewDepMail: '',\r\n                selected: \"\"\r\n            }\r\n        },\r\n        props: {\r\n            msg: String\r\n        },\r\n         created() {\r\n        // this.$parent.updateAll()        \r\n        },\r\n        methods: {\r\n                      \r\n           async AddDepartment() {\r\n\r\n                // wenn keine Abteilung ausgewählt wurde - nimm default ALL\r\n                if (!this.selected) \r\n                    this.selected = 0;\r\n                const _NewDep = {\r\n                    newDepName: this.NewDepName,\r\n                    newDepCompany: this.selected,\r\n                    newDepMail: this.NewDepMail\r\n                };\r\n\r\n                await DBService\r\n                    .DBAddDepartment(_NewDep)\r\n                    .then(() =>  this.$parent.updateAll())\r\n                    .then(() => {\r\n                        this.newDepName = \"\"\r\n                        this.newDepCompany = \"\"\r\n                        this.newDepMail = \"\"\r\n                        this.selected = \"\"\r\n\r\n                    })\r\n                    .catch((error) => alert((\"Server returned an Error:\\n\" + error.response.data)));\r\n\r\n            },\r\n            async toggleDepartment(id, enabled) {\r\n                await DBService.toggleEntry(\"Abteilungen\", id, enabled)\r\n                .then(() =>  this.$parent.updateAll())            \r\n                .catch((error) => alert((\"Server returned an Error:\\n\" + error.response.data)));\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped=\"scoped\">\r\n    div.container {\r\n        max-width: 90%;\r\n\r\n    }\r\n\r\n    p.error {\r\n        border: 1px solid #ff5b5f;\r\n        background-color: #ffc5c1;\r\n        padding: 10px;\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    div.entryRow {\r\n        position: relative;\r\n        border: 1px solid #5bd658;\r\n        background-color: #bcffb8;\r\n        padding: 10px 10px 1px;\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    div.created-at {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        padding: 5px 15px;\r\n        background-color: darkgreen;\r\n        color: white;\r\n        font-size: 13px;\r\n    }\r\n\r\n    p.text {\r\n        font-size: 22px;\r\n        font-weight: 700;\r\n        margin-bottom: 0;\r\n    }\r\n\r\n    p.smalltext {\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        margin-bottom: 0;\r\n    }\r\n    /* table {\r\n                                      width: 100%;\r\n                                      text-align: left;\r\n                                      border: 1px solid black;\r\n                                      border-collapse: collapse;\r\n                                           \r\n                                    }\r\n                                    th {\r\n                                      padding: 5px;\r\n                                      font-weight: 700;\r\n                                      border: 1px solid black;\r\n                                      vertical-align: middle;\r\n                                    } */\r\n    td {\r\n        padding: 4px;\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n        margin-bottom: 0;\r\n        border: 1px solid black;\r\n        vertical-align: middle;\r\n        align: left;\r\n    }\r\n    .btn-disable {\r\n        background-color: rgb(53, 53, 53);\r\n        color: rgb(236, 48, 48);\r\n        border: 2px solid rgb(179, 7, 7);\r\n        /* Green */\r\n    }\r\n    .btn-enable {\r\n        background-color: rgb(53, 53, 53);\r\n        color: rgb(124, 223, 148);\r\n        border: 2px solid rgb(0, 145, 43);\r\n        /* Green */\r\n    }\r\n</style>"],"sourceRoot":"src/components/admin"}]}