{"remainingRequest":"/opt/client/node_modules/babel-loader/lib/index.js!/opt/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/client/src/components/personal/personalShowPers.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/client/src/components/personal/personalShowPers.vue","mtime":1582383890766},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1582320095676},{"path":"/opt/client/node_modules/babel-loader/lib/index.js","mtime":1582320095572},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1582320095676},{"path":"/opt/client/node_modules/vue-loader/lib/index.js","mtime":1582320098604}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/opt/client/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DBService from \"../DBService\";\nexport default {\n  name: 'personalShowPers',\n  components: {},\n  data: function data() {\n    return {\n      Personal: []\n    };\n  },\n  created: function created() {\n    this.updateAll();\n  },\n  methods: {\n    updateAll: function () {\n      var _updateAll = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function updateAll() {\n        return _updateAll.apply(this, arguments);\n      }\n\n      return updateAll;\n    }()\n  }\n};",{"version":3,"sources":["personalShowPers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,OAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,UAAA,EAAA,EAFA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GARA;AASA,EAAA,OATA,qBASA;AACA,SAAA,SAAA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAZA,CAAA","sourcesContent":["<template>\r\n\r\n    <div class=\"entryRow form-group\">\r\n        <h3>------ Status - Personal --- ----</h3>\r\n        <table  border=\"1\" class=\"table  table-striped table-dark\">\r\n            <thead class=\"table table-dark\">\r\n                <tr>\r\n                    <th>Firma</th>\r\n                    <th>Pers.Nr.</th>\r\n                    <th>Nachname</th>\r\n                    <th>Vorname</th>\r\n                    <th>Titel</th>\r\n                    <th>Geschlecht</th>\r\n                    <th>Eintritt</th>\r\n                    <th>Austritt</th>\r\n                    <th>Abteilung</th>\r\n                    <th>Geburtsdatum</th>\r\n                    <th>Dienstart</th>\r\n                    <th>Berufsbezeichnung</th>\r\n                    <th>Bearbeitungsstatus</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                 <tr v-for=\"per in this.Personal\" v-bind:key=\"per.id\">\r\n                    <td>{{per.firma}}</td>\r\n                    <td>{{per.persnr}}</td>\r\n                    <td>{{per.nachname}}</td>\r\n                    <td>{{per.vorname}}</td>\r\n                    <td>{{per.titel}}</td>\r\n                    <td>{{per.geschlecht}}</td>\r\n                    <td>{{per.eintritt}}</td>\r\n                    <td>{{per.austritt}}</td>                    \r\n                    <td v-if=\"per.abteilungStatus == 1\">{{per.abteilung}} - <span class=\"badge badge-success\">OK</span></td>\r\n                    <td v-else>{{per.abteilung}} - <span class=\"badge badge-warning\">Offen</span></td>\r\n                    <td>{{per.gebdat}}</td>\r\n                    <td>{{per.dienstart}}</td>\r\n                    <td>{{per.berufsbezeichnung}}</td>                    \r\n                    <td v-if=\"per.processorStatus == 1\"><span class=\"badge badge-success\">OK</span></td>\r\n                    <td v-else><span class=\"badge badge-warning\">Offen</span></td>\r\n                 </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n\r\n</template>\r\n<script>\r\n\r\nimport DBService from '../DBService';\r\n\r\nexport default {\r\n    name: 'personalShowPers',\r\n    components: {    \r\n    },\r\n    data() {\r\n        return {\r\n            Personal: [],\r\n        }\r\n    },\r\n    created () {\r\n        this.updateAll()\r\n    },\r\n    methods: {\r\n       async updateAll() {\r\n  /*           await DBService\r\n            // 'Range' wird bei Personal-Get nicht benötigt.\r\n            // wurde aber der Einfachheit halber gelassen, da sonnst in der App ein \r\n            // extra DBGet gemacht werden müsste\r\n            .DBget(\"Personal\",\"All\")\r\n            .then((_personal) => {\r\n                this.Personal = _personal\r\n            })\r\n            .catch((error) => alert(error)); */\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n</style>\r\n\r\n"],"sourceRoot":"src/components/personal"}]}