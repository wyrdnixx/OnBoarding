{"remainingRequest":"/opt/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/opt/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/opt/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/client/src/components/admin/manageItems.vue?vue&type=template&id=0e52cd3b&scoped=true&","dependencies":[{"path":"/opt/client/src/components/admin/manageItems.vue","mtime":1582320098836},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1582320095676},{"path":"/opt/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1582320098608},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1582320095676},{"path":"/opt/client/node_modules/vue-loader/lib/index.js","mtime":1582320098604}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"ManageItems\" }, [\n    _c(\"section\", { staticClass: \"form\" }, [\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.newItemText,\n            expression: \"newItemText\"\n          }\n        ],\n        staticClass: \"form-control\",\n        attrs: { placeholder: \"Item-Text\" },\n        domProps: { value: _vm.newItemText },\n        on: {\n          input: function($event) {\n            if ($event.target.composing) {\n              return\n            }\n            _vm.newItemText = $event.target.value\n          }\n        }\n      }),\n      _vm._v(\n        \"\\n        Abteilung, für die das Item verfügbar ist ( ALL = Alle Abteilungen):\\n        \"\n      ),\n      _c(\n        \"select\",\n        {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.selectedDepartment,\n              expression: \"selectedDepartment\"\n            }\n          ],\n          staticClass: \"btn btn-secondary dropdown-toggle\",\n          attrs: { name: \"NewItemDepartment\" },\n          on: {\n            click: function($event) {\n              return this.$parent.updateAll()\n            },\n            change: function($event) {\n              var $$selectedVal = Array.prototype.filter\n                .call($event.target.options, function(o) {\n                  return o.selected\n                })\n                .map(function(o) {\n                  var val = \"_value\" in o ? o._value : o.value\n                  return val\n                })\n              _vm.selectedDepartment = $event.target.multiple\n                ? $$selectedVal\n                : $$selectedVal[0]\n            }\n          }\n        },\n        _vm._l(this.$parent.Abteilungen, function(dep) {\n          return dep.enabled === 1\n            ? _c(\"option\", { key: dep.id, domProps: { value: dep.id } }, [\n                _vm._v(_vm._s(dep.name) + \"\\n            \")\n              ])\n            : _vm._e()\n        }),\n        0\n      ),\n      _c(\"br\"),\n      _vm._v(\"\\n            Bearbeitende Abteilung:\\n            \"),\n      _c(\n        \"select\",\n        {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.selectedProcessor,\n              expression: \"selectedProcessor\"\n            }\n          ],\n          staticClass: \"btn btn-secondary dropdown-toggle\",\n          attrs: { name: \"NewItemProcessor\" },\n          on: {\n            click: function($event) {\n              return this.$parent.updateAll()\n            },\n            change: function($event) {\n              var $$selectedVal = Array.prototype.filter\n                .call($event.target.options, function(o) {\n                  return o.selected\n                })\n                .map(function(o) {\n                  var val = \"_value\" in o ? o._value : o.value\n                  return val\n                })\n              _vm.selectedProcessor = $event.target.multiple\n                ? $$selectedVal\n                : $$selectedVal[0]\n            }\n          }\n        },\n        _vm._l(this.$parent.Processors, function(proc) {\n          return proc.enabled === 1\n            ? _c(\"option\", { key: proc.id, domProps: { value: proc.id } }, [\n                _vm._v(_vm._s(proc.name) + \"\\n                \")\n              ])\n            : _vm._e()\n        }),\n        0\n      ),\n      _c(\"br\"),\n      _vm._v(\"\\n                Typ des Items:\\n                \"),\n      _c(\n        \"select\",\n        {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.selectedType,\n              expression: \"selectedType\"\n            }\n          ],\n          staticClass: \"btn btn-secondary dropdown-toggle\",\n          attrs: { name: \"NewItemType\" },\n          on: {\n            change: function($event) {\n              var $$selectedVal = Array.prototype.filter\n                .call($event.target.options, function(o) {\n                  return o.selected\n                })\n                .map(function(o) {\n                  var val = \"_value\" in o ? o._value : o.value\n                  return val\n                })\n              _vm.selectedType = $event.target.multiple\n                ? $$selectedVal\n                : $$selectedVal[0]\n            }\n          }\n        },\n        [\n          _c(\"option\", [_vm._v(\"CheckBox\")]),\n          _c(\"option\", [_vm._v(\"Choose\")]),\n          _c(\"option\", [_vm._v(\"Text\")])\n        ]\n      ),\n      _vm.selectedType === \"Choose\"\n        ? _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.newItemChooseOptions,\n                expression: \"newItemChooseOptions\"\n              }\n            ],\n            staticClass: \"form-control\",\n            attrs: {\n              placeholder:\n                \"Optionen, die zur Auswahl stehen. ( Eins;Zwei;Drei; )\"\n            },\n            domProps: { value: _vm.newItemChooseOptions },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.newItemChooseOptions = $event.target.value\n              }\n            }\n          })\n        : _vm._e(),\n      _c(\"br\"),\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn btn-success\",\n          attrs: { type: \"button\" },\n          on: { click: _vm.AddItem }\n        },\n        [_vm._v(\"Item anlegen\")]\n      ),\n      _c(\"hr\"),\n      _c(\"div\", [\n        _c(\"table\", { staticClass: \"table  table-striped table-dark\" }, [\n          _vm._m(0),\n          _c(\n            \"tbody\",\n            _vm._l(this.$parent.Items, function(item) {\n              return _c(\n                \"tr\",\n                { key: item.id },\n                [\n                  item.enabled === 1\n                    ? [\n                        _c(\"td\", [_vm._v(_vm._s(item.Text))]),\n                        _c(\"td\", [_vm._v(_vm._s(item.DepId))]),\n                        _c(\"td\", [_vm._v(_vm._s(item.ProcessorId))]),\n                        _c(\"td\", [_vm._v(_vm._s(item.ItemType))]),\n                        _c(\"td\", { attrs: { align: \"right\" } }, [\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn-disable\",\n                              attrs: { type: \"button\" },\n                              on: {\n                                click: function($event) {\n                                  return _vm.toggleItem(item.id, item.enabled)\n                                }\n                              }\n                            },\n                            [_vm._v(\"disable\")]\n                          )\n                        ])\n                      ]\n                    : _vm._e(),\n                  item.enabled === 0\n                    ? [\n                        _c(\"td\", { staticClass: \"disabledColumn\" }, [\n                          _vm._v(_vm._s(item.Text))\n                        ]),\n                        _c(\"td\", { staticClass: \"disabledColumn\" }, [\n                          _vm._v(_vm._s(item.DepId))\n                        ]),\n                        _c(\"td\", { staticClass: \"disabledColumn\" }, [\n                          _vm._v(_vm._s(item.ProcessorId))\n                        ]),\n                        _c(\"td\", { staticClass: \"disabledColumn\" }, [\n                          _vm._v(_vm._s(item.ItemType))\n                        ]),\n                        _c(\n                          \"td\",\n                          {\n                            staticClass: \"disabledColumn\",\n                            attrs: { align: \"right\" }\n                          },\n                          [\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"btn-enable\",\n                                attrs: { type: \"button\" },\n                                on: {\n                                  click: function($event) {\n                                    return _vm.toggleItem(item.id, item.enabled)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Enable\")]\n                            )\n                          ]\n                        )\n                      ]\n                    : _vm._e()\n                ],\n                2\n              )\n            }),\n            0\n          )\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"thead\", { staticClass: \"thead-dark\" }, [\n      _c(\"tr\", [\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Item\")]),\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Abteilung\")]),\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Bearbeiter\")]),\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"Type/Value\")]),\n        _c(\"th\", { attrs: { scope: \"col\" } }, [_vm._v(\"(de-)aktivieren\")])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}