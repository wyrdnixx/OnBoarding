{"remainingRequest":"/opt/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/opt/client/src/components/admin/manageDepartments.vue?vue&type=script&lang=js&","dependencies":[{"path":"/opt/client/src/components/admin/manageDepartments.vue","mtime":1581366472857},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1581161752000},{"path":"/opt/client/node_modules/babel-loader/lib/index.js","mtime":1581161736000},{"path":"/opt/client/node_modules/cache-loader/dist/cjs.js","mtime":1581161752000},{"path":"/opt/client/node_modules/vue-loader/lib/index.js","mtime":1581161753000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DBService from '../DBService';\n//import TodoItem from './TodoItem.vue';\n//import manageIndex from './manageIndex.vue'\n\nexport default {\n    name: 'ManageDepartments',\n    //extends: manageIndex,\n    components: {},\n    data() {\n        return {\n            // Firmen: [],\n            // Abteilungen: [],\n            NewDepName: '',\n            NewDepCompany: '',\n            NewDepMail: '',\n            selected: \"\"\n        }\n    },\n    props: {\n        msg: String\n    },\n     created() {\n    // this.$parent.updateAll()        \n    },\n    methods: {\n                  \n       async AddDepartment() {\n\n            // wenn keine Abteilung ausgewählt wurde - nimm default ALL\n            if (!this.selected) \n                this.selected = 0;\n            const _NewDep = {\n                newDepName: this.NewDepName,\n                newDepCompany: this.selected,\n                newDepMail: this.NewDepMail\n            };\n\n            await DBService\n                .DBAddDepartment(_NewDep)\n                .then(() =>  this.$parent.updateAll())\n                .then(() => {\n                    this.newDepName = \"\"\n                    this.newDepCompany = \"\"\n                    this.newDepMail = \"\"\n                    this.selected = \"\"\n\n                })\n                .catch((error) => alert((\"Server returned an Error:\\n\" + error.response.data)));\n\n        },\n        async toggleDepartment(id, enabled) {\n            await DBService.toggleEntry(\"Abteilungen\", id, enabled)\n            .then(() =>  this.$parent.updateAll())            \n            .catch((error) => alert((\"Server returned an Error:\\n\" + error.response.data)));\n        }\n    }\n\n}\n",{"version":3,"sources":["manageDepartments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"manageDepartments.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\r\n\r\n    <div >\r\n\r\n        <!-- <h1> {{msg}} </h1> -->\r\n\r\n        <section class=\"form\">\r\n            <input class=\"form-control\" v-model=\"NewDepName\" placeholder=\"Abteilung\"/>\r\n            <input class=\"form-control\" v-model=\"NewDepMail\" placeholder=\"Mail\"/>\r\n            Firma, der die Abteilung zugehörig ist:\r\n            <select\r\n                name=\"NewDepFirma\"\r\n                v-model=\"selected\"                \r\n                class=\"btn btn-secondary dropdown-toggle\">\r\n                <!-- <option :value=\"comp.id\">{{comp.id}} </option> -->\r\n                <option v-for=\"comp in this.$parent.Firmen\" v-bind:key=\"comp.id\" :value=\"comp.id\">{{comp.name}}\r\n                </option>\r\n            </select>\r\n\r\n            <!-- <select v-model=\"selected\" id=\"deptList\" class=\"btn btn-secondary\r\n            dropdown-toggle\"> <option v-for=\"comp in Firmen\" v-bind:value=\"comp.name\">\r\n            {{comp.name}} </option> </select> -->\r\n\r\n            <button id=\"adfds\" type=\"button\" class=\"btn btn-success\" @click='AddDepartment'>Abteilung anlegen</button>\r\n\r\n            <table class=\"table  table-striped table-dark\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Abteilung</th>\r\n                        <th scope=\"col\">Firma</th>\r\n                        <th scope=\"col\">Mail</th>\r\n                        <th scope=\"col\">(de-)aktivieren</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody >\r\n                    <tr v-for=\"dep in this.$parent.Abteilungen\" v-bind:key=\"dep.id\">\r\n                        <template v-if=\"dep.enabled === 1\">\r\n                            <td >{{dep.name}}</td>\r\n                            <td>{{dep.firma}}</td>\r\n                            <td>{{dep.notifyMail}}</td>\r\n                            <td align=\"right\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn-disable\"\r\n                                    @click='toggleDepartment(dep.id, dep.enabled)'>disable</button>\r\n                            </td>\r\n                        </template>\r\n                        <template v-if=\"dep.enabled === 0\">\r\n                            <td class=\"disabledColumn\">{{dep.name}}</td>\r\n                            <td class=\"disabledColumn\">{{dep.firma}}</td>\r\n                            <td class=\"disabledColumn\">{{dep.notifyMail}}</td>\r\n                            <td class=\"disabledColumn\" align=\"right\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    class=\"btn-enable\"\r\n                                    @click='toggleDepartment(dep.id, dep.enabled)'>Enable</button>\r\n                            </td>\r\n                        </template>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import DBService from '../DBService';\r\n    //import TodoItem from './TodoItem.vue';\r\n    //import manageIndex from './manageIndex.vue'\r\n\r\n    export default {\r\n        name: 'ManageDepartments',\r\n        //extends: manageIndex,\r\n        components: {},\r\n        data() {\r\n            return {\r\n                // Firmen: [],\r\n                // Abteilungen: [],\r\n                NewDepName: '',\r\n                NewDepCompany: '',\r\n                NewDepMail: '',\r\n                selected: \"\"\r\n            }\r\n        },\r\n        props: {\r\n            msg: String\r\n        },\r\n         created() {\r\n        // this.$parent.updateAll()        \r\n        },\r\n        methods: {\r\n                      \r\n           async AddDepartment() {\r\n\r\n                // wenn keine Abteilung ausgewählt wurde - nimm default ALL\r\n                if (!this.selected) \r\n                    this.selected = 0;\r\n                const _NewDep = {\r\n                    newDepName: this.NewDepName,\r\n                    newDepCompany: this.selected,\r\n                    newDepMail: this.NewDepMail\r\n                };\r\n\r\n                await DBService\r\n                    .DBAddDepartment(_NewDep)\r\n                    .then(() =>  this.$parent.updateAll())\r\n                    .then(() => {\r\n                        this.newDepName = \"\"\r\n                        this.newDepCompany = \"\"\r\n                        this.newDepMail = \"\"\r\n                        this.selected = \"\"\r\n\r\n                    })\r\n                    .catch((error) => alert((\"Server returned an Error:\\n\" + error.response.data)));\r\n\r\n            },\r\n            async toggleDepartment(id, enabled) {\r\n                await DBService.toggleEntry(\"Abteilungen\", id, enabled)\r\n                .then(() =>  this.$parent.updateAll())            \r\n                .catch((error) => alert((\"Server returned an Error:\\n\" + error.response.data)));\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped=\"scoped\">\r\n  \r\n</style>"]}]}